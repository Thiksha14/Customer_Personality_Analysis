# -*- coding: utf-8 -*-
"""Customer Personality Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oHOJbtDTkcLqhVo37eBDLxBtiTqWyGXb

#TASK 3

> Customer Personality Analysis
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
from sklearn.decomposition import PCA
import streamlit as st
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("Customer_Segmentation_Dataset.csv")

df.drop(columns=['ID', 'Z_CostContact', 'Z_Revenue'], inplace=True)
df.dropna(subset=['Income'], inplace=True)

df['Age'] = 2025 - df['Year_Birth']
df['Dt_Customer'] = pd.to_datetime(df['Dt_Customer'], dayfirst=True)
df['Tenure'] = (pd.to_datetime('2025-01-01') - df['Dt_Customer']).dt.days // 30
df['NumChildren'] = df['Kidhome'] + df['Teenhome']
df['Total_Spent'] = df[['MntWines', 'MntFruits', 'MntMeatProducts',
                        'MntFishProducts', 'MntSweetProducts', 'MntGoldProds']].sum(axis=1)

df.drop(columns=['Year_Birth', 'Dt_Customer'], inplace=True) # Dropping original date and year columns

df = pd.get_dummies(df, columns=['Education', 'Marital_Status'], drop_first=True) #one hot encoding

features = ['Income', 'Age', 'Tenure', 'NumChildren', 'Recency', 'Total_Spent']
features += [col for col in df.columns if col.startswith('Education_') or col.startswith('Marital_Status_')]
X = df[features] #selecting features

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X) #standardizing data

st.title("Customer Segmentation App")

k = st.slider("Select number of customer segments (k):", min_value=2, max_value=10, value=4) #streamlit application

kmeans = KMeans(n_clusters=k, random_state=42)
df['Cluster'] = kmeans.fit_predict(X_scaled) #kmeans

pca = PCA(n_components=2)
components = pca.fit_transform(X_scaled)
df['PCA1'] = components[:, 0]
df['PCA2'] = components[:, 1] #pca for visualization

st.subheader("Cluster Distribution")
fig1, ax1 = plt.subplots()
sns.countplot(x='Cluster', data=df, ax=ax1)
st.pyplot(fig1) #visualization

st.subheader("Customer Segments in 2D PCA Space")
fig2, ax2 = plt.subplots()
sns.scatterplot(data=df, x='PCA1', y='PCA2', hue='Cluster', palette='Set2', ax=ax2)
st.pyplot(fig2)

st.subheader("Average Metrics per Cluster")
st.dataframe(df.groupby('Cluster')[['Income', 'Age', 'Tenure', 'Total_Spent']].mean().round(1))

st.write("------------")